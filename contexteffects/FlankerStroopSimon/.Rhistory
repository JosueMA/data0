"acc", "==", "1",
"cond", "!=", "2",
"exp", "==", "0"), ncol = 3, byrow = TRUE)
simon.pexp1.dat <- readdata(filename
, clnames #colnames of dataset
, "rt" #Y/rt
, "cond" #condition variable
, cond.congruent = 1 #label of congruent cond
, "sub" #Subject variable
, "sec" #Which unit is  it in? Standard min
, trial = 1:5 #Remove fist trials/block -> 1:x?
, exclude = exclude.s
, exp.pratte = TRUE
)
simon.pexp1.dat$dat$y <- simon.pexp1.dat$dat$rt
# simon.pexp1.comp <- make.comp(simon.pexp1.dat
#           , clnames #colnames of dataset
#           , v.y = "rt" #Y/rt
#           , v.cond = "cond" #condition variable
#           , cond.congruent = 1 #label of congruent cond
#           , v.sub = "sub" #Subject variable
#           , unit = "sec" #Which unit is  it in? Standard min
#           , trial = 1:5 #Remove fist trials/block -> 1:x?
#           , v.trial = "trial"
#           , exclude = exclude.s
#           , M = M
#           , keep.min = keep.min
#           , exp.pratte = TRUE #Where does the experiment come from? If not Pratte et a., -> FALSE
#           , evaluate = "mean"
#           )
# save(simon.pexp1.comp, file = "../../juliaDev/newanalysis/chains/simoncomppexp1.RData")
load("chains/simoncomppexp1.RData")
ES.simon.p1 <- t.test(simon.pexp1.dat$means[, 2], simon.pexp1.dat$means[, 1], paired = TRUE)$statistic/sqrt(nrow(simon.pexp1.dat$means))
bfs.simon.p1 <- as.numeric(simon.pexp1.comp$bfs[2, 1:3])
f.stat.simon.p1 <- myF(simon.pexp1.dat$dat)
##Simon 2 Pratte
filename <- curl('https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi7.dat')
clnames <- c('sub','blk','blktype','trial','word','location','cond','resp','acc','rt','errorTotal')
#subject, block, blocktype (0 = Simon, 1 = Stroop),
#trial (N = 72 per block), word (1, 2), location (1, 2),
#condition (0 = incongruent, 1 = congruent), response, accuracy, reaction time, errorTotal
exclude.s = matrix(c(
"acc", "==", "1",
"blktype", "==", "0"), ncol = 3, byrow = TRUE)
simon.pexp2.dat <- readdata(filename
, clnames #colnames of dataset
, "rt" #Y/rt
, "cond" #condition variable
, cond.congruent = 1 #label of congruent cond
, "sub" #Subject variable
, "sec" #Which unit is  it in? Standard min
, trial = 1:5 #Remove fist trials/block -> 1:x?
, exclude = exclude.s
, exp.pratte = TRUE
)
simon.pexp2.dat$dat$y <- simon.pexp2.dat$dat$rt
# simon.pexp2.comp <- make.comp(simon.pexp2.dat
#           , clnames #colnames of dataset
#           , v.y = "rt" #Y/rt
#           , v.cond = "cond" #condition variable
#           , cond.congruent = 1 #label of congruent cond
#           , v.sub = "sub" #Subject variable
#           , unit = "sec" #Which unit is  it in? Standard min
#           , trial = 1:5 #Remove fist trials/block -> 1:x?
#           , v.trial = "trial"
#           , exclude = exclude.s
#           , M = M
#           , keep.min = keep.min
#           , exp.pratte = TRUE #Where does the experiment come from? If not Pratte et a., -> FALSE
#           , evaluate = "mean"
#           )
# save(simon.pexp2.comp, file = "../../juliaDev/newanalysis/chains/simoncomppexp2.RData")
load("chains/simoncomppexp2.RData")
f.stat.simon.p2 <- myF(simon.pexp2.dat$dat)
ES.simon.p2 <- t.test(simon.pexp2.dat$means[, 2], simon.pexp2.dat$means[, 1], paired = TRUE)$statistic/sqrt(nrow(simon.pexp2.dat$means))
bfs.simon.p2 <- as.numeric(simon.pexp2.comp$bfs[2, 1:3])
1 - pf(f.stat.simon.p1, simon.pexp1.dat$I - 1, simon.pexp1.dat$N - simon.pexp1.dat$I*simon.pexp1.dat$J)
round(1 - pf(f.stat.simon.p1, simon.pexp1.dat$I - 1, simon.pexp1.dat$N - simon.pexp1.dat$I*simon.pexp1.dat$J), 3)
1 - pf(f.stat.simon.p2, simon.pexp2.dat$I - 1, simon.pexp2.dat$N - simon.pexp2.dat$I*simon.pexp2.dat$J)
round((1 - pf(f.stat.simon.p2, simon.pexp2.dat$I - 1, simon.pexp2.dat$N - simon.pexp2.dat$I*simon.pexp2.dat$J))/10^-5, 3)
paste(round((1 - pf(f.stat.simon.p2, simon.pexp2.dat$I - 1, simon.pexp2.dat$N - simon.pexp2.dat$I*simon.pexp2.dat$J))/10^-5, 3), "\\times 10^{-5}")
tab.sum
100 -round(simon.dat$N/121/2)
simon.dat$N/121/2
round(simon.dat$N/121/2)
round(simon.dat$N/121/2, 2)
100 -round(simon.dat$N/121/2, 2)
ES.flanker
##flanker Oberauer
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_flanker.csv")
flanker <- read.csv2(filename, header=TRUE, dec=".")
flanker$cond <- as.numeric(flanker$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
ntrial <- length(flanker[flanker$id == flanker$id[1], 1])
nsub <- length(unique(flanker$id))
flanker$trial <- rep(1:ntrial, nsub)
flanker$sub <- rep(1:nsub, each = ntrial)
flanker$rt <- flanker$RT/1000
exclude.s = matrix(c(
"accuracy", "==", "1",
"cond", "!=", "3"), ncol = 3, byrow = TRUE)
flanker.dat <- readdata(flanker
, clnames = 0
, "rt" #Y/rt
, "cond" #condition variable
, cond.congruent = 1 #label of congruent cond
, "sub" #Subject variable
, "sec" #Which unit is  it in? Standard min
, trial = FALSE #Remove fist trials/block -> 1:x?
, exclude = exclude.s
, exp.pratte = FALSE
)
flanker.dat$dat$y <- flanker.dat$dat$rt
# flanker.comp.0 <- make.comp(flanker.dat
#       #    , clnames #colnames of dataset
#           , v.y = "rt" #Y/rt
#           , v.cond = "cond" #condition variable
#           , cond.congruent = 1 #label of congruent cond
#           , v.sub = "sub" #Subject variable
#           , unit = "sec" #Which unit is  it in? Standard min
#           , trial = FALSE #Remove fist trials/block -> 1:x?
#           , v.trial = "trial"
#           , exclude = exclude.s
#           , M = M
#           , keep.min = keep.min
#           , exp.pratte = FALSE #Where does the experiment come from? If not Pratte et a., -> FALSE
#           , evaluate = 0
#           , mu.SD = .007
#           , var.SD = .0007
#           , off.set = 400
#           )
# save(flanker.comp.0, file = "chains/flankercomp.RData")
load("chains/flankercomp.RData")
ES.flanker <- t.test(flanker.dat$means[, 2], flanker.dat$means[, 1], paired = TRUE)$statistic/sqrt(nrow(flanker.dat$means))
bfs.flanker <- as.numeric(flanker.comp.0$bfs[2, 1:3])
f.stat.flanker <- myF(flanker.dat$dat)
ES.flanker, 2
ES.flanker
round(ES.flanker, 2)
flanker.dat$comp[3]
round(flanker.dat$comp[3], 3)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_stroop.csv")
stroop <- read.csv2(filename, header=TRUE, dec=".")
head(stroop)
nsub <- length(unique(stroop$id))
stroop$ID <- rep(1:nsub, each = ntrial)
head(stroop)
stroop <- stroop[, -"id"]
stroop <- stroop[, -stroop$id]
head(stroop)
stroop <- stroop[, -1]
head(stroop)
stroop <- stroop[, c(4, 1, 2, 3)]
head(stroop)
setwd("~/Documents/GIT/data0/contexteffects/FlankerStroopSimon")
write.csv2(stroop, header=TRUE, dec=".")
?write.csv2
write.csv2(stroop, row.names = FALSE, dec=".")
write.csv2(stroop, file = "LEF_stroop.csv", row.names = FALSE, dec=".")
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi2.dat")
simon <- read.csv2(filename, header=TRUE, dec=".")
head(simon)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_simon.csv")
simon <- read.csv2(filename, header=TRUE, dec=".")
nsub <- length(unique(simon$id))
ntrial
ntrial/3
ntrial <- length(simon[simon$id == simon$id[1], 1])
ntrial
simon$ID <- rep(1:nsub, each = ntrial)
head(simon)
table(simon$ID)
table(stroop$ID)
simon <- simon[, -1]
simon <- simon[, c(4, 1, 2, 3)]
head(simon)
write.csv2(simon, file = "LEF_simon.csv", row.names = FALSE, dec=".")
table(simon$congruency)
simon$cond <- as.numeric(simon$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
table(simon$cond)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_flanker.csv")
flanker <- read.csv2(filename, header=TRUE, dec=".")
ntrial <- length(flanker[flanker$id == flanker$id[1], 1])
nsub <- length(unique(flanker$id))
flanker$ID <- rep(1:nsub, each = ntrial)
flanker <- flanker[, -1]
flanker <- flanker[, c(4, 1,2,3)]
head(flanker)
table(flanker$congruency)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi2.dat")
clnames <- c('exp'
, 'sub'
, 'blk'
, 'trial'
, 'color'
, 'distract'
, 'cond'
, 'resp'
, 'acc'
, 'rt'
, 'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi7.dat")
clnames <- c('sub'
,'blk'
,'blktype'
,'trial'
,'word'
,'location'
,'cond'
,'resp'
,'acc'
,'rt'
,'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi2.dat")
clnames <- c('exp'
, 'sub'
, 'blk'
, 'trial'
, 'color'
, 'distract'
, 'cond'
, 'resp'
, 'acc'
, 'rt'
, 'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
table(dat$cond)
table(dat$cond[dat$exp ==0])
library(curl) ##You will need to load the R package "curl" to use this cleaning code
##Experiment 1, Stroop task (Data Set 2)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi2.dat")
clnames <- c('exp'
, 'sub'
, 'blk'
, 'trial'
, 'color'
, 'distract'
, 'cond'
, 'resp'
, 'acc'
, 'rt'
, 'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
#clean rt data as proposed in Pratte et al., 2010
dat <- dat[dat$rt > .2 & dat$rt < 2, ] #Delete very slow and very fast responses
dat <- subset(dat, acc == 1 & cond != 2 & exp == 1) #accurate data, deleting neutral condition, only stroop task data
dat <- dat[!(dat$trial %in% 1:5), ] #Delete first 5 trials in each block
dat.stroop.p1 <- dat
##Experiment 2, Stroop task (Data Set 3)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi7.dat")
clnames <- c('sub'
,'blk'
,'blktype'
,'trial'
,'word'
,'location'
,'cond'
,'resp'
,'acc'
,'rt'
,'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
#clean rt data as proposed in Pratte et al., 2010
#only congruent & incongruent condition and only stroop data
dat <- dat[dat$rt > .2 & dat$rt < 2, ]
dat <- subset(dat, acc == 1 & blktype == 1) #Only accurate data, only data from Stroop task
dat <- dat[!(dat$trial %in% 1:5), ]
dat.stroop.p2 <- dat
##Experiment 1, Simon task (Data Set 5)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi2.dat")
clnames <- c('exp'
, 'sub'
, 'blk'
, 'trial'
, 'color'
, 'distract'
, 'cond'
, 'resp'
, 'acc'
, 'rt'
, 'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
#clean rt data as proposed in Pratte et al., 2010
#only congruent & incongruent condition and only stroop data
dat <- dat[dat$rt > .2 & dat$rt < 2, ]
dat <- subset(dat, acc == 1 & exp == 0) #accurate data, only simon task data
dat <- dat[!(dat$trial %in% 1:5), ]
dat.simon.p1 <- dat
##Experiment 2, Simon task (Data Set 6)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi7.dat")
clnames <- c('sub'
,'blk'
,'blktype'
,'trial'
,'word'
,'location'
,'cond'
,'resp'
,'acc'
,'rt'
,'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
#clean rt data as proposed in Pratte et al., 2010
#only congruent & incongruent condition and only stroop data
dat <- dat[dat$rt > .2 & dat$rt < 2, ]
dat <- subset(dat, acc == 1 & blktype == 0) #accurate data, only simon task data
dat <- dat[!(dat$trial %in% 1:5), ]
dat.simon.p2 <- dat
write.csv2(flanker, file = "LEF_flanker.csv", row.names = FALSE, dec=".")
##Stroop 1 Pratte
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_stroop.csv")
dat <- read.csv2(filename, header=TRUE, dec=".")
dat$cond <- as.numeric(dat$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
ntrial <- length(dat[dat$id == dat$id[1], 1])
nsub <- length(unique(dat$id))
dat$trial <- rep(1:ntrial, nsub)
dat$sub <- rep(1:nsub, each = ntrial)
dat$rt <- dat$RT/1000
dat <- subset(dat, cond != 3)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time <- round((1 - nrow(dat.time)/nrow(dat))*100)
dat.acc <- subset(dat, accuracy == 1)
percent.acc <- round((1 - nrow(dat.acc)/nrow(dat))*100)
head(dat)
dat$cond <- as.numeric(dat$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
ntrial <- length(dat[dat$ID == dat$ID[1], 1])
nsub <- length(unique(dat$ID))
nsub
ntrial
dat$trial <- rep(1:ntrial, nsub)
dat$sub <- rep(1:nsub, each = ntrial)
dat$rt <- dat$RT/1000
dat <- subset(dat, cond != 3)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time <- round((1 - nrow(dat.time)/nrow(dat))*100)
dat.acc <- subset(dat, accuracy == 1)
percent.acc <- round((1 - nrow(dat.acc)/nrow(dat))*100)
percent.time
dat.acc
percent.acc
(1 - stroop.dat$N/nrow(dat))*100
percent.time <- round((1 - nrow(dat.time)/nrow(dat))*100, 3)
dat.acc <- subset(dat, accuracy == 1)
percent.acc <- round((1 - nrow(dat.acc)/nrow(dat))*100, 3)
percent.time
percent.acc
percent.total <- round((1 - stroop.dat$N/nrow(dat))*100, 3)
percent.total
percent.time <- round((1 - nrow(dat.time)/nrow(dat))*100, 2)
dat.acc <- subset(dat, accuracy == 1)
percent.acc <- round((1 - nrow(dat.acc)/nrow(dat))*100, 2)
percent.total <- round((1 - stroop.dat$N/nrow(dat))*100, 2)
percent.time
percent.acc
percent.total
##Stroop 1 Pratte
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi2.dat")
clnames <- c('exp', 'sub', 'blk', 'trial', 'color', 'distract', 'cond', 'resp', 'acc', 'rt', 'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
dat <- subset(dat, cond != 2 & exp == 1)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time.2 <- round((1 - nrow(dat.time)/nrow(dat))*100, 2)
dat.acc <- subset(dat, acc == 1)
percent.acc.2 <- round((1 - nrow(dat.acc)/nrow(dat))*100, 2)
dat.trial <- dat[!(dat$trial %in% 1:5), ]
percent.trial.2 <- round((1 - nrow(dat.trial)/nrow(dat))*100, 2)
percent.total.2 <- 100 -round(stroop.pexp1.dat$N/38/2/1.68, 2)
percent.total.2
percent.trial.2
percent.acc.2
percent.time.2
##Stroop 2 Pratte
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi7.dat")
clnames <- c('sub','blk','blktype','trial','word','location','cond','resp','acc','rt','errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
dat <- subset(dat, blktype == 1)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time.3 <- round((1 - nrow(dat.time)/nrow(dat))*100, 2)
dat.acc <- subset(dat, acc == 1)
percent.acc.3 <- round((1 - nrow(dat.acc)/nrow(dat))*100, 2)
dat.trial <- dat[!(dat$trial %in% 1:5), ]
percent.trial.3 <- round((1 - nrow(dat.trial)/nrow(dat))*100, 2)
percent.total.3 <-  100 -round(stroop.pexp2.dat$N/38/2/1.80, 2)
percent.time.3
percent.acc.3
percent.trial.3
percent.total.3
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_simon.csv")
dat <- read.csv2(filename, header=TRUE, dec=".")
dat$cond <- as.numeric(dat$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
ntrial <- length(dat[dat$ID == dat$ID[1], 1])
nsub <- length(unique(dat$ID))
dat$trial <- rep(1:ntrial, nsub)
dat$sub <- rep(1:nsub, each = ntrial)
dat$rt <- dat$RT/1000
dat <- subset(dat, cond != 3)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time <- round((1 - nrow(dat.time)/nrow(dat))*100)
dat.acc <- subset(dat, accuracy == 1)
percent.acc <- round((1 - nrow(dat.acc)/nrow(dat))*100)
percent.time
percent.acc
dat <- subset(dat, cond != 3)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time.4 <- round((1 - nrow(dat.time)/nrow(dat))*100, 2)
dat.acc <- subset(dat, accuracy == 1)
percent.acc.4 <- round((1 - nrow(dat.acc)/nrow(dat))*100, 2)
percent.total.4 <- 100 -round(simon.dat$N/121/2, 2)
percent.total.4
percent.acc.4
percent.time.4
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi2.dat")
clnames <- c('exp', 'sub', 'blk', 'trial', 'color', 'distract', 'cond', 'resp', 'acc', 'rt', 'errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
dat <- subset(dat, cond != 2 & exp == 0)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time.5 <- round((1 - nrow(dat.time)/nrow(dat))*100, 2)
dat.acc <- subset(dat, acc == 1)
percent.acc.5 <- round((1 - nrow(dat.acc)/nrow(dat))*100, 2)
dat.trial <- dat[!(dat$trial %in% 1:5), ]
percent.trial.5 <- round((1 - nrow(dat.trial)/nrow(dat))*100, 2)
percent.total.5 <- 100 -round(simon.pexp1.dat$N/38/2/2.52, 2)
percent.time.5
percent.acc.5
percent.trial.5
percent.total.5
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_flanker.csv")
dat <- read.csv2(filename, header=TRUE, dec=".")
dat$cond <- as.numeric(dat$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
ntrial <- length(dat[dat$ID == dat$ID[1], 1])
nsub <- length(unique(dat$ID))
dat$trial <- rep(1:ntrial, nsub)
dat$sub <- rep(1:nsub, each = ntrial)
dat$rt <- dat$RT/1000
dat <- subset(dat, cond != 3)
dat.acc <- subset(dat, accuracy == 1)
percent.acc.7 <- round((1 - nrow(dat.acc)/nrow(dat))*100,2)
dat.time <- dat[dat$rt > .2 & dat$rt < 2& dat$acc ==1, ]
percent.time.7 <- round((1 - nrow(dat.time)/nrow(dat.acc))*100, 2)
percent.total.7 <- round(100 - flanker.dat$N/121/2/.48, 2)
percent.total.7
percent.time.7
percent.acc.7
stroop <- read.csv2("../../data/LEF_stroop.csv", header=TRUE, dec=".")
stroop <- read.csv2("../../data/LEF_stroop.csv", header=TRUE, dec=".")
row.names <- c(""
, "\\bf{Criterion I.}"
, "\\bf{Criterion II. \\& III.}"
, "\\bf{Criterion IV.}"
, "\\bf{Total}")
row.names
st <- c("\\bf{1}", percent.time.1, percent.acc.1, "---", percent.total.1
, "\\bf{2}", percent.time.2, percent.acc.2, percent.trial.2, percent.total.2
, "\\bf{3}", percent.time.3, percent.acc.3, percent.trial.3, percent.total.3
)
##Stroop 1 Pratte
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_stroop.csv")
dat <- read.csv2(filename, header=TRUE, dec=".")
dat$cond <- as.numeric(dat$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
ntrial <- length(dat[dat$ID == dat$ID[1], 1])
nsub <- length(unique(dat$ID))
dat$trial <- rep(1:ntrial, nsub)
dat$sub <- rep(1:nsub, each = ntrial)
dat$rt <- dat$RT/1000
dat <- subset(dat, cond != 3)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time.1 <- round((1 - nrow(dat.time)/nrow(dat))*100, 2)
dat.acc <- subset(dat, accuracy == 1)
percent.acc.1 <- round((1 - nrow(dat.acc)/nrow(dat))*100, 2)
percent.total.1 <- round((1 - stroop.dat$N/nrow(dat))*100, 2)
st <- c("\\bf{1}", percent.time.1, percent.acc.1, "---", percent.total.1
, "\\bf{2}", percent.time.2, percent.acc.2, percent.trial.2, percent.total.2
, "\\bf{3}", percent.time.3, percent.acc.3, percent.trial.3, percent.total.3
)
st <- c("\\bf{4}", percent.time.4, percent.acc.4, "---", percent.total.4
, "\\bf{5}", percent.time.5, percent.acc.5, percent.trial.5, percent.total.5
, "\\bf{6}", percent.time.6, percent.acc.6, percent.trial.6, percent.total.6
)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/StroopSimonAPP2010/allsi7.dat")
clnames <- c('sub','blk','blktype','trial','word','location','cond','resp','acc','rt','errorTotal')
dat <- read.table(filename)
colnames(dat) <- clnames
dat <- subset(dat, blktype == 0)
dat.time <- dat[dat$rt > .2 & dat$rt < 2, ]
percent.time.6 <- round((1 - nrow(dat.time)/nrow(dat))*100, 2)
dat.acc <- subset(dat, acc == 1)
percent.acc.6 <- round((1 - nrow(dat.acc)/nrow(dat))*100, 2)
dat.trial <- dat[!(dat$trial %in% 1:5), ]
percent.trial.6 <- round((1 - nrow(dat.trial)/nrow(dat))*100, 2)
percent.total.6 <- 100 -round(simon.pexp2.dat$N/38/2/1.8, 2)
st <- c("\\bf{4}", percent.time.4, percent.acc.4, "---", percent.total.4
, "\\bf{5}", percent.time.5, percent.acc.5, percent.trial.5, percent.total.5
, "\\bf{6}", percent.time.6, percent.acc.6, percent.trial.6, percent.total.6
)
fl <- c("\\bf{7}", percent.time.7, percent.acc.7, "---", percent.total.7)
si <- c("\\bf{4}", percent.time.4, percent.acc.4, "---", percent.total.4
, "\\bf{5}", percent.time.5, percent.acc.5, percent.trial.5, percent.total.5
, "\\bf{6}", percent.time.6, percent.acc.6, percent.trial.6, percent.total.6
)
percent.total.5
100 -round(simon.pexp1.dat$N/38/2/2.52, 2)
